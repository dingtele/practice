import java.util.Arrays;
import java.util.stream.Collectors;


public class Stream {

	public int squareDigits(int n) {
	    return Integer.parseInt(String.valueOf(n)
	    		.chars()
	    		.map(x -> x - '0')
	    		.map(x -> x*x)
	    		.mapToObj(String::valueOf)
	    		.collect(Collectors.joining("")));
	    
	  }
	
	public static int[] deleteNth(int[] elements, int maxOccurrences)
	{
		
		for (int i = 0; i < elements.length; i++)
		{
			
			int count = 0;
			for(int j = i+1; j < elements.length-1-i; j++)
			{
				if (elements[i] == elements[j])
					count++;
					if(count >= maxOccurrences)
						elements[j] = elements[j+1];
			}
		}
		
		return elements;
	}
	
	public static int removeAndLength(int[] a, int elem)
	{
		int j = 0;
		
		for (int i = 0; i < a.length; i++)
		{
			if(a[i] == elem)
				continue;
			a[j] = a[i];
			j ++;
		}
		
		return j;
	}
	
	public static int removeSortedDuplicate(int[] a)
	{
		int j = 0;
		
		for (int i = 1; i < a.length; i++)
			if (a[j] != a[i])
				a[++j] = a[i];
			else continue;
		return j+1;
	}
	
	public static int removeSortedDuplicate2(int[] a)
	{
		int j = 0;
		int count = 0;
		
		for (int i = 0; i < a.length; i++)
			if  (a[j] != a[i] || count < 3)
			{
				a[j++] = a[i];
				count++;
			}	
			else continue;
		
		return j;
				
	}
	
	
	
	
	public static void main(String[] args)
	{
		int[] a = {1,1,1,2,3,5,5,8,};
		
		System.out.print(Stream.removeSortedDuplicate(a));
	}
}